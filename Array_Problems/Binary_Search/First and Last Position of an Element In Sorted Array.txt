#include <bits/stdc++.h> 

int firstOcc(vector<int>& arr, int n, int key) {
    int start = 0, end = n - 1;
    int mid = start + (end - start) / 2;
    int ans = -1;
    while(start <= end)
    {
        if(arr[mid] == key)
        {
            ans = mid;
            end = mid - 1;
        }
        else if(arr[mid] > key)
        {
            end = mid - 1;
        }
        else {
            start = mid + 1;
        }
        mid = start + (end - start) / 2;
    }
    return ans;
}


int lastOcc(vector<int>& arr, int n, int key) {
    int start = 0, end = n - 1;
    int mid = start + (end - start) / 2;
    int ans = -1;
    while(start <= end)
    {
        if(arr[mid] == key)
        {
            ans = mid;
            start = mid + 1;
        }
        else if(arr[mid] > key)
        {
            end = mid - 1;
        }
        else {
            start = mid + 1;
        }
        mid = start + (end - start) / 2;
    }
    return ans;
}


pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    // Write your code here
   // Pair just need to create two memory space to store two values one at the first and another at second.
    pair<int, int> ans;
    ans.first = firstOcc( arr, n, k);
    ans.second = lastOcc( arr, n, k);

    return ans;
    
}